Spara lexikon till fst funkar inte:
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: GC overhead limit exceeded
	at marytts.fst.AlignerTrainer.splitAndAdd(AlignerTrainer.java:193)
	at marytts.fst.AlignerTrainer.readLexicon(AlignerTrainer.java:172)
	at marytts.tools.transcription.TranscriptionTableModel.createLexicon(TranscriptionTableModel.java:471)
	at marytts.tools.transcription.TranscriptionTable.saveTranscription(TranscriptionTable.java:253)
	at marytts.tools.transcription.TranscriptionGUI.saveToFileActionPerformed(TranscriptionGUI.java:598)

Inte heller trainpredict, samma fel.


Ökade till -Xmx2g, spara till fst funkar.
trainpredict har iaf kommit igång.


################################
150902

cat nor_lex_converted_filtered_edited_lexicon.dict | sed 's/|/\t/g' | sed "s/\" \"/QUOT/g" | sed "s/\"/'/g" | sed "s/QUOT/\"/g" > nor_lex_150902.txt

format: 
abandoner	A - b A n - d U - " n e: r
Inga ord markerade "functional"

sh ~/git/marytts/hb/marytts-lts-lexicon_builder allophones.no.xml ./nor_lex_150902.txt
java version "1.7.0_65"
Java(TM) SE Runtime Environment (build 1.7.0_65-b17)
Java HotSpot(TM) 64-Bit Server VM (build 24.65-b04, mixed mode)

trainPredict ...
training ... 
iteration 0
iteration 1
iteration 2
iteration 3
iteration 4
training completed.
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at marytts.fst.AlignerTrainer.getAlignment(AlignerTrainer.java:339)
	at marytts.tools.newlanguage.LTSTrainer.trainTree(LTSTrainer.java:125)
	at marytts.tools.transcription.LTSLexiconPOSBuilder.trainLTS(LTSLexiconPOSBuilder.java:184)
	at marytts.tools.transcription.LTSLexiconPOSBuilder.trainPredict(LTSLexiconPOSBuilder.java:140)
	at marytts.tools.transcription.LTSLexiconPOSBuilder.main(LTSLexiconPOSBuilder.java:262)


-Xmx2g


java version "1.7.0_65"
Java(TM) SE Runtime Environment (build 1.7.0_65-b17)
Java HotSpot(TM) 64-Bit Server VM (build 24.65-b04, mixed mode)

trainPredict ...
training ... 
iteration 0
iteration 1
iteration 2
iteration 3
iteration 4
training completed.
      Training decision tree for: null
      Training decision tree for: f
      Training decision tree for: g
      Training decision tree for: d
      Training decision tree for: e
Exception in thread "main" java.lang.OutOfMemoryError: GC overhead limit exceeded
	at weka.core.DenseInstance.copy(DenseInstance.java:144)
	at weka.core.Instances.add(Instances.java:302)
	at weka.classifiers.trees.j48.ClassifierSplitModel.split(ClassifierSplitModel.java:259)
	at weka.classifiers.trees.j48.ClassifierTree.buildTree(ClassifierTree.java:156)
	at weka.classifiers.trees.j48.C45PruneableClassifierTree.getNewTree(C45PruneableClassifierTree.java:238)
	at weka.classifiers.trees.j48.ClassifierTree.buildTree(ClassifierTree.java:160)
	at weka.classifiers.trees.j48.C45PruneableClassifierTree.getNewTree(C45PruneableClassifierTree.java:238)
	at weka.classifiers.trees.j48.ClassifierTree.buildTree(ClassifierTree.java:160)
	at weka.classifiers.trees.j48.C45PruneableClassifierTree.getNewTree(C45PruneableClassifierTree.java:238)
	at weka.classifiers.trees.j48.ClassifierTree.buildTree(ClassifierTree.java:160)
	at weka.classifiers.trees.j48.C45PruneableClassifierTree.getNewTree(C45PruneableClassifierTree.java:238)
	at weka.classifiers.trees.j48.ClassifierTree.buildTree(ClassifierTree.java:160)
	at weka.classifiers.trees.j48.C45PruneableClassifierTree.getNewTree(C45PruneableClassifierTree.java:238)
	at weka.classifiers.trees.j48.ClassifierTree.buildTree(ClassifierTree.java:160)
	at weka.classifiers.trees.j48.C45PruneableClassifierTree.getNewTree(C45PruneableClassifierTree.java:238)
	at weka.classifiers.trees.j48.ClassifierTree.buildTree(ClassifierTree.java:160)
	at weka.classifiers.trees.j48.C45PruneableClassifierTree.getNewTree(C45PruneableClassifierTree.java:238)
	at weka.classifiers.trees.j48.ClassifierTree.buildTree(ClassifierTree.java:160)
	at weka.classifiers.trees.j48.C45PruneableClassifierTree.getNewTree(C45PruneableClassifierTree.java:238)
	at weka.classifiers.trees.j48.ClassifierTree.buildTree(ClassifierTree.java:160)
	at weka.classifiers.trees.j48.C45PruneableClassifierTree.buildClassifier(C45PruneableClassifierTree.java:126)
	at marytts.tools.newlanguage.LTSTrainer.trainTree(LTSTrainer.java:235)
	at marytts.tools.transcription.LTSLexiconPOSBuilder.trainLTS(LTSLexiconPOSBuilder.java:184)
	at marytts.tools.transcription.LTSLexiconPOSBuilder.trainPredict(LTSLexiconPOSBuilder.java:140)
	at marytts.tools.transcription.LTSLexiconPOSBuilder.main(LTSLexiconPOSBuilder.java:262)

-Xmx4g

Problem looking up key 'øyen': Expected value '"', but got 2 results: '"' '''
Testing complete. 723293 entries (705033 correct, 18260 failed)

øyen has two entries:
øyen	' 9*Y - @ n
øyen	" 9*Y - @ n

Maybe everything is fine, and this is just a testing problem.

Files:
-rwxrwxrwx 1 root root 9.7M Sep  2 10:37 nor_lex_150902_lexicon.dict
-rwxrwxrwx 1 root root 1.4M Sep  2 10:38 nor_lex_150902_lexicon.fst
-rwxrwxrwx 1 root root 9.7M Sep  2 10:37 nor_lex_150902.lextxt
-rwxrwxrwx 1 root root  12K Sep  2 10:37 nor_lex_150902.lts
-rwxrwxrwx 1 root root  29M Sep  2 09:13 nor_lex_150902.txt

No: 
nor_lex_150902.lextxt starts
abandoner A
abandonere A
nor_lex_150902_lexicon.dict starts
abandoner|A
abandonere|A

So the trans format should be without spaces??

###########################################
Start again from scratch with the real lexicon data?
